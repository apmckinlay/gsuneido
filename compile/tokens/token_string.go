// Code generated by "stringer -type=Token"; DO NOT EDIT.

package tokens

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Nil-0]
	_ = x[Eof-1]
	_ = x[Error-2]
	_ = x[Identifier-3]
	_ = x[Number-4]
	_ = x[String-5]
	_ = x[Symbol-6]
	_ = x[Whitespace-7]
	_ = x[Comment-8]
	_ = x[Newline-9]
	_ = x[Hash-10]
	_ = x[Comma-11]
	_ = x[Semicolon-12]
	_ = x[At-13]
	_ = x[LParen-14]
	_ = x[RParen-15]
	_ = x[LBracket-16]
	_ = x[RBracket-17]
	_ = x[LCurly-18]
	_ = x[RCurly-19]
	_ = x[RangeTo-20]
	_ = x[RangeLen-21]
	_ = x[OpsStart-22]
	_ = x[Not-23]
	_ = x[BitNot-24]
	_ = x[New-25]
	_ = x[Dot-26]
	_ = x[CompareStart-27]
	_ = x[Is-28]
	_ = x[Isnt-29]
	_ = x[Match-30]
	_ = x[MatchNot-31]
	_ = x[Lt-32]
	_ = x[Lte-33]
	_ = x[Gt-34]
	_ = x[Gte-35]
	_ = x[CompareEnd-36]
	_ = x[QMark-37]
	_ = x[Colon-38]
	_ = x[AssocStart-39]
	_ = x[And-40]
	_ = x[Or-41]
	_ = x[BitOr-42]
	_ = x[BitAnd-43]
	_ = x[BitXor-44]
	_ = x[Add-45]
	_ = x[Sub-46]
	_ = x[Cat-47]
	_ = x[Mul-48]
	_ = x[Div-49]
	_ = x[AssocEnd-50]
	_ = x[Mod-51]
	_ = x[LShift-52]
	_ = x[RShift-53]
	_ = x[Pipe-54]
	_ = x[IncDecStart-55]
	_ = x[Inc-56]
	_ = x[PostInc-57]
	_ = x[Dec-58]
	_ = x[PostDec-59]
	_ = x[IncDecEnd-60]
	_ = x[AssignStart-61]
	_ = x[Eq-62]
	_ = x[AddEq-63]
	_ = x[SubEq-64]
	_ = x[CatEq-65]
	_ = x[MulEq-66]
	_ = x[DivEq-67]
	_ = x[ModEq-68]
	_ = x[LShiftEq-69]
	_ = x[RShiftEq-70]
	_ = x[BitOrEq-71]
	_ = x[BitAndEq-72]
	_ = x[BitXorEq-73]
	_ = x[AssignEnd-74]
	_ = x[In-75]
	_ = x[Break-76]
	_ = x[Case-77]
	_ = x[Catch-78]
	_ = x[Class-79]
	_ = x[Continue-80]
	_ = x[Default-81]
	_ = x[Do-82]
	_ = x[Else-83]
	_ = x[False-84]
	_ = x[For-85]
	_ = x[Forever-86]
	_ = x[Function-87]
	_ = x[If-88]
	_ = x[Return-89]
	_ = x[Switch-90]
	_ = x[Super-91]
	_ = x[This-92]
	_ = x[Throw-93]
	_ = x[True-94]
	_ = x[Try-95]
	_ = x[While-96]
	_ = x[QueryStart-97]
	_ = x[SummarizeStart-98]
	_ = x[Average-99]
	_ = x[Count-100]
	_ = x[List-101]
	_ = x[Max-102]
	_ = x[Min-103]
	_ = x[Total-104]
	_ = x[SummarizeEnd-105]
	_ = x[Alter-106]
	_ = x[By-107]
	_ = x[Cascade-108]
	_ = x[Create-109]
	_ = x[Delete-110]
	_ = x[Drop-111]
	_ = x[Ensure-112]
	_ = x[Extend-113]
	_ = x[History-114]
	_ = x[Index-115]
	_ = x[Insert-116]
	_ = x[Intersect-117]
	_ = x[Into-118]
	_ = x[Join-119]
	_ = x[Key-120]
	_ = x[Leftjoin-121]
	_ = x[Lower-122]
	_ = x[Minus-123]
	_ = x[Project-124]
	_ = x[Remove-125]
	_ = x[Rename-126]
	_ = x[Reverse-127]
	_ = x[Set-128]
	_ = x[Sort-129]
	_ = x[Summarize-130]
	_ = x[Sview-131]
	_ = x[TempIndex-132]
	_ = x[Times-133]
	_ = x[To-134]
	_ = x[Union-135]
	_ = x[Unique-136]
	_ = x[Update-137]
	_ = x[View-138]
	_ = x[Where-139]
	_ = x[Ntokens-140]
}

const _Token_name = "NilEofErrorIdentifierNumberStringSymbolWhitespaceCommentNewlineHashCommaSemicolonAtLParenRParenLBracketRBracketLCurlyRCurlyRangeToRangeLenOpsStartNotBitNotNewDotCompareStartIsIsntMatchMatchNotLtLteGtGteCompareEndQMarkColonAssocStartAndOrBitOrBitAndBitXorAddSubCatMulDivAssocEndModLShiftRShiftPipeIncDecStartIncPostIncDecPostDecIncDecEndAssignStartEqAddEqSubEqCatEqMulEqDivEqModEqLShiftEqRShiftEqBitOrEqBitAndEqBitXorEqAssignEndInBreakCaseCatchClassContinueDefaultDoElseFalseForForeverFunctionIfReturnSwitchSuperThisThrowTrueTryWhileQueryStartSummarizeStartAverageCountListMaxMinTotalSummarizeEndAlterByCascadeCreateDeleteDropEnsureExtendHistoryIndexInsertIntersectIntoJoinKeyLeftjoinLowerMinusProjectRemoveRenameReverseSetSortSummarizeSviewTempIndexTimesToUnionUniqueUpdateViewWhereNtokens"

var _Token_index = [...]uint16{0, 3, 6, 11, 21, 27, 33, 39, 49, 56, 63, 67, 72, 81, 83, 89, 95, 103, 111, 117, 123, 130, 138, 146, 149, 155, 158, 161, 173, 175, 179, 184, 192, 194, 197, 199, 202, 212, 217, 222, 232, 235, 237, 242, 248, 254, 257, 260, 263, 266, 269, 277, 280, 286, 292, 296, 307, 310, 317, 320, 327, 336, 347, 349, 354, 359, 364, 369, 374, 379, 387, 395, 402, 410, 418, 427, 429, 434, 438, 443, 448, 456, 463, 465, 469, 474, 477, 484, 492, 494, 500, 506, 511, 515, 520, 524, 527, 532, 542, 556, 563, 568, 572, 575, 578, 583, 595, 600, 602, 609, 615, 621, 625, 631, 637, 644, 649, 655, 664, 668, 672, 675, 683, 688, 693, 700, 706, 712, 719, 722, 726, 735, 740, 749, 754, 756, 761, 767, 773, 777, 782, 789}

func (i Token) String() string {
	if i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
