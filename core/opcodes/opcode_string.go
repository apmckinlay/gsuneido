// Code generated by "stringer -type=Opcode"; DO NOT EDIT.

package opcodes

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Nop-0]
	_ = x[Pop-1]
	_ = x[Int-2]
	_ = x[Value-3]
	_ = x[True-4]
	_ = x[False-5]
	_ = x[Zero-6]
	_ = x[One-7]
	_ = x[MinusOne-8]
	_ = x[MaxInt-9]
	_ = x[EmptyStr-10]
	_ = x[PushReturn-11]
	_ = x[Load-12]
	_ = x[Store-13]
	_ = x[LoadStore-14]
	_ = x[Dyload-15]
	_ = x[Global-16]
	_ = x[Get-17]
	_ = x[Put-18]
	_ = x[GetPut-19]
	_ = x[RangeTo-20]
	_ = x[RangeLen-21]
	_ = x[This-22]
	_ = x[Is-23]
	_ = x[Isnt-24]
	_ = x[Match-25]
	_ = x[MatchNot-26]
	_ = x[Lt-27]
	_ = x[Lte-28]
	_ = x[Gt-29]
	_ = x[Gte-30]
	_ = x[Add-31]
	_ = x[Sub-32]
	_ = x[Cat-33]
	_ = x[CatN-34]
	_ = x[Mul-35]
	_ = x[Div-36]
	_ = x[Mod-37]
	_ = x[LeftShift-38]
	_ = x[RightShift-39]
	_ = x[BitOr-40]
	_ = x[BitAnd-41]
	_ = x[BitXor-42]
	_ = x[BitNot-43]
	_ = x[Not-44]
	_ = x[UnaryPlus-45]
	_ = x[UnaryMinus-46]
	_ = x[InRange-47]
	_ = x[Or-48]
	_ = x[And-49]
	_ = x[Bool-50]
	_ = x[QMark-51]
	_ = x[In-52]
	_ = x[Cover-53]
	_ = x[Jump-54]
	_ = x[JumpTrue-55]
	_ = x[JumpFalse-56]
	_ = x[JumpIs-57]
	_ = x[JumpIsnt-58]
	_ = x[JumpLt-59]
	_ = x[Iter-60]
	_ = x[Iter2-61]
	_ = x[ForIn-62]
	_ = x[ForIn2-63]
	_ = x[ForRange-64]
	_ = x[ForRangeVar-65]
	_ = x[Throw-66]
	_ = x[Try-67]
	_ = x[Catch-68]
	_ = x[CallFuncDiscard-69]
	_ = x[CallFuncNoNil-70]
	_ = x[CallFuncNilOk-71]
	_ = x[CallMethDiscard-72]
	_ = x[CallMethNoNil-73]
	_ = x[CallMethNilOk-74]
	_ = x[Super-75]
	_ = x[Return-76]
	_ = x[ReturnNil-77]
	_ = x[ReturnThrow-78]
	_ = x[ReturnMulti-79]
	_ = x[Closure-80]
	_ = x[BlockBreak-81]
	_ = x[BlockContinue-82]
	_ = x[BlockReturn-83]
	_ = x[BlockReturnNil-84]
	_ = x[LoadValue-85]
	_ = x[ValueCallMethNoNil-86]
	_ = x[ValueGet-87]
	_ = x[LoadLoad-88]
	_ = x[ThisValue-89]
	_ = x[StorePop-90]
	_ = x[ThisLoad-91]
	_ = x[GetValue-92]
	_ = x[PopLoad-93]
	_ = x[GlobalCallFuncNoNil-94]
}

const _Opcode_name = "NopPopIntValueTrueFalseZeroOneMinusOneMaxIntEmptyStrPushReturnLoadStoreLoadStoreDyloadGlobalGetPutGetPutRangeToRangeLenThisIsIsntMatchMatchNotLtLteGtGteAddSubCatCatNMulDivModLeftShiftRightShiftBitOrBitAndBitXorBitNotNotUnaryPlusUnaryMinusInRangeOrAndBoolQMarkInCoverJumpJumpTrueJumpFalseJumpIsJumpIsntJumpLtIterIter2ForInForIn2ForRangeForRangeVarThrowTryCatchCallFuncDiscardCallFuncNoNilCallFuncNilOkCallMethDiscardCallMethNoNilCallMethNilOkSuperReturnReturnNilReturnThrowReturnMultiClosureBlockBreakBlockContinueBlockReturnBlockReturnNilLoadValueValueCallMethNoNilValueGetLoadLoadThisValueStorePopThisLoadGetValuePopLoadGlobalCallFuncNoNil"

var _Opcode_index = [...]uint16{0, 3, 6, 9, 14, 18, 23, 27, 30, 38, 44, 52, 62, 66, 71, 80, 86, 92, 95, 98, 104, 111, 119, 123, 125, 129, 134, 142, 144, 147, 149, 152, 155, 158, 161, 165, 168, 171, 174, 183, 193, 198, 204, 210, 216, 219, 228, 238, 245, 247, 250, 254, 259, 261, 266, 270, 278, 287, 293, 301, 307, 311, 316, 321, 327, 335, 346, 351, 354, 359, 374, 387, 400, 415, 428, 441, 446, 452, 461, 472, 483, 490, 500, 513, 524, 538, 547, 565, 573, 581, 590, 598, 606, 614, 621, 640}

func (i Opcode) String() string {
	if i >= Opcode(len(_Opcode_index)-1) {
		return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
